{"ast":null,"code":"var _jsxFileName = \"/Users/slau8405/Desktop/work_space/work_space/project/learningHub/src/js/Git.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/Git.css'; // Import your Git CSS file here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Git() {\n  _s();\n  const navigate = useNavigate();\n  const [showBackButton, setShowBackButton] = useState(false);\n  let lastScrollY = window.scrollY;\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY < lastScrollY) {\n        setShowBackButton(true); // Show button when scrolling up\n      } else {\n        setShowBackButton(false); // Hide button when scrolling down\n      }\n\n      lastScrollY = window.scrollY;\n    };\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const handleBack = () => {\n    navigate(-1); // Go back to the previous page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"git-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: handleBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"git-intro\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Git Tutorial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the Git tutorial. Learn the basics of Git version control and how it can improve your coding workflow.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"git-vs-gitlab\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Difference Between Git and GitLab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Git is a version control system that lets you manage and keep track of your source code history. GitLab, on the other hand, is a web-based Git repository manager with wiki and issue tracking features.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"While Git is a command line tool, GitLab provides a web-based graphical interface on top of Git functionality and additional tools for team collaboration.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"git-basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Git Basics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Git, a distributed version control system, is essential for tracking changes in source code during software development. It's designed for coordinating work among programmers, but it can be used to track changes in any set of files.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `# Initialize a new Git repository\n                    git init\n    \n                    # Clone an existing repository\n                    git clone <repository-url>`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"git-commands\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Common Git Commands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Understanding common Git commands is crucial for managing your projects effectively.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `# Add files to staging\n                    git add <filename>\n                    \n                    # Commit changes\n                    git commit -m \"commit message\"\n                    \n                    # Push changes to remote repository\n                    git push origin master\n                    \n                    # Pull changes from remote repository\n                    git pull origin master`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"git-branching\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Branching and Merging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Branching in Git is a powerful feature that lets you diverge from the main line of development and continue to do work without messing with that main line.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `# Create a new branch\n                    git branch <branch-name>\n                    \n                    # Switch to a branch\n                    git checkout <branch-name>\n                    \n                    # Merge a branch into the current branch\n                    git merge <branch-name>`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Git, \"cJYiNoX9KwtlRwd2Favcfmt0Yk8=\", false, function () {\n  return [useNavigate];\n});\n_c = Git;\nexport default Git;\nvar _c;\n$RefreshReg$(_c, \"Git\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Git","_s","navigate","showBackButton","setShowBackButton","lastScrollY","window","scrollY","handleScroll","addEventListener","passive","removeEventListener","handleBack","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/slau8405/Desktop/work_space/work_space/project/learningHub/src/js/Git.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/Git.css'; // Import your Git CSS file here\n\nfunction Git() {\n\n    const navigate = useNavigate();\n    const [showBackButton, setShowBackButton] = useState(false);\n    let lastScrollY = window.scrollY;\n\n    useEffect(() => {\n        const handleScroll = () => {\n            if (window.scrollY < lastScrollY) {\n                setShowBackButton(true); // Show button when scrolling up\n            } else {\n                setShowBackButton(false); // Hide button when scrolling down\n            }\n            lastScrollY = window.scrollY;\n        };\n\n        window.addEventListener('scroll', handleScroll, { passive: true });\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    const handleBack = () => {\n        navigate(-1); // Go back to the previous page\n    };\n\n    return (\n        <div className=\"git-page\">\n            <button className=\"back-button\" onClick={handleBack}>Back</button>\n            \n            {/* Introduction to Git */}\n            <section className=\"git-intro\">\n                <h1>Git Tutorial</h1>\n                <p>Welcome to the Git tutorial. Learn the basics of Git version control and how it can improve your coding workflow.</p>\n            </section>\n    \n            {/* Difference Between Git and GitLab */}\n            <section className=\"git-vs-gitlab\">\n                <h2>Difference Between Git and GitLab</h2>\n                <p>Git is a version control system that lets you manage and keep track of your source code history. GitLab, on the other hand, is a web-based Git repository manager with wiki and issue tracking features.</p>\n                <p>While Git is a command line tool, GitLab provides a web-based graphical interface on top of Git functionality and additional tools for team collaboration.</p>\n            </section>\n    \n            {/* Git Basics */}\n            <section className=\"git-basics\">\n                <h2>Git Basics</h2>\n                <p>Git, a distributed version control system, is essential for tracking changes in source code during software development. It's designed for coordinating work among programmers, but it can be used to track changes in any set of files.</p>\n                <pre><code>\n                    {`# Initialize a new Git repository\n                    git init\n    \n                    # Clone an existing repository\n                    git clone <repository-url>`}\n                </code></pre>\n            </section>\n    \n            {/* Common Git Commands */}\n            <section className=\"git-commands\">\n                <h2>Common Git Commands</h2>\n                <p>Understanding common Git commands is crucial for managing your projects effectively.</p>\n                <pre><code>\n                    {`# Add files to staging\n                    git add <filename>\n                    \n                    # Commit changes\n                    git commit -m \"commit message\"\n                    \n                    # Push changes to remote repository\n                    git push origin master\n                    \n                    # Pull changes from remote repository\n                    git pull origin master`}\n                </code></pre>\n            </section>\n    \n            {/* Branching and Merging */}\n            <section className=\"git-branching\">\n                <h2>Branching and Merging</h2>\n                <p>Branching in Git is a powerful feature that lets you diverge from the main line of development and continue to do work without messing with that main line.</p>\n                <pre><code>\n                    {`# Create a new branch\n                    git branch <branch-name>\n                    \n                    # Switch to a branch\n                    git checkout <branch-name>\n                    \n                    # Merge a branch into the current branch\n                    git merge <branch-name>`}\n                </code></pre>\n            </section>\n    \n            {/* Add more sections as needed */}\n        </div>\n    );\n    \n}\n\nexport default Git;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}