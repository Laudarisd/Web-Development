{"ast":null,"code":"var _jsxFileName = \"/Users/slau8405/Desktop/work_space/work_space/project/learninghub/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import './App.css';\nimport Navbar from './js/Navbar';\nimport Home from './js/Home';\nimport './css/Navbar.css';\nimport Login from './js/Login';\nimport './css/Login.css';\nimport AboutUs from './js/Aboutus';\nimport AdminPanel from './js/AdminPanel';\nimport AiMl from './js/AiMl';\nimport Ds from './js/Ds';\nimport Forgotpw from './js/Forgotpw';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n  const handleSignup = (email, password) => {\n    const usersData = require('./data/users.json');\n    const userExists = usersData.users.some(user => user.email === email);\n    if (userExists) {\n      alert(\"User already exists\");\n      return;\n    }\n    usersData.users.push({\n      email,\n      password\n    });\n    // Use server for real life production with password hash\n    alert(\"User created successfully\");\n  };\n  const handleLogin = (email, password) => {\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    // Check if both email and password are entered\n    if (!email || password) {\n      alert(\"Please enter both email and password\");\n      return;\n    }\n    //Check if email is in valid format\n    if (!emailRegex.test(email)) {\n      alert(\"Please enter a valid email\");\n      return;\n    }\n    //Check if password is in valid format\n    if (!passwordRegex.test(password)) {\n      alert(\"Please enter a valid password\");\n      return;\n    }\n    // Check if both email and password are entered\n    if (email && password) {\n      if (email === 'admin@example.com' && password === 'admin') {\n        setIsLoggedIn(true);\n        setIsAdmin(true);\n        navigate('/'); // Navigate to home after admin login\n      } else if (email !== 'admin@example.com') {\n        setIsLoggedIn(true);\n        setIsAdmin(false);\n        navigate('/'); // Navigate to home for regular users\n      } else {\n        // Maybe show an error message here\n        alert(\"Invalid email or password\");\n      }\n    } else {\n      alert(\"Please enter both email and password\");\n    }\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setIsAdmin(false);\n    navigate('/login'); // Redirect to login page on logout\n  };\n\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/aiml\",\n        element: /*#__PURE__*/_jsxDEV(AiMl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Ds\",\n        element: /*#__PURE__*/_jsxDEV(Ds, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgotpw\",\n        element: /*#__PURE__*/_jsxDEV(Forgotpw, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), isAdmin && /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(AdminPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"fGTohrjVGhCkpnoM+39fP93MrPk=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Home","Login","AboutUs","AdminPanel","AiMl","Ds","Forgotpw","Routes","Route","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","navigate","handleSignup","email","password","usersData","require","userExists","users","some","user","alert","push","handleLogin","emailRegex","passwordRegex","test","handleLogout","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","children","onLogout","path","element","_c","$RefreshReg$"],"sources":["/Users/slau8405/Desktop/work_space/work_space/project/learninghub/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n// import './App.css';\nimport Navbar from './js/Navbar';\nimport Home from './js/Home';\nimport './css/Navbar.css';\nimport Login from './js/Login';\nimport './css/Login.css';\nimport AboutUs from './js/Aboutus';\nimport AdminPanel from './js/AdminPanel';\n\nimport AiMl from './js/AiMl';\nimport Ds from './js/Ds';\nimport Forgotpw from './js/Forgotpw'\n\nimport { Routes, Route, useNavigate } from 'react-router-dom';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSignup = (email, password) => {\n    const usersData = require('./data/users.json');\n    const userExists = usersData.users.some(user => user.email === email);\n\n    if (userExists) {\n        alert(\"User already exists\");\n        return;\n    }\n    usersData.users.push({ email, password });\n    // Use server for real life production with password hash\n    alert(\"User created successfully\");\n  };\n  \n  \n  \n  const handleLogin = (email, password) => {\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    // Check if both email and password are entered\n    if (!email || password) {\n        alert(\"Please enter both email and password\");\n        return;\n    }\n    //Check if email is in valid format\n    if (!emailRegex.test(email)) {\n        alert(\"Please enter a valid email\");\n        return;\n    }\n    //Check if password is in valid format\n    if (!passwordRegex.test(password)) {\n        alert(\"Please enter a valid password\");\n        return;\n    }\n    // Check if both email and password are entered\n    if (email && password) {\n        if (email === 'admin@example.com' && password === 'admin') {\n            setIsLoggedIn(true);\n            setIsAdmin(true);\n            navigate('/'); // Navigate to home after admin login\n        } else if (email !== 'admin@example.com') {\n            setIsLoggedIn(true);\n            setIsAdmin(false);\n            navigate('/'); // Navigate to home for regular users\n        } else {\n            // Maybe show an error message here\n            alert(\"Invalid email or password\");\n        }\n    } else {\n        alert(\"Please enter both email and password\");\n    }\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setIsAdmin(false);\n    navigate('/login'); // Redirect to login page on logout\n  };\n\n  if (!isLoggedIn) {\n    return <Login onLogin={handleLogin} />;\n  }\n\n  return (\n    <>\n      <Navbar isLoggedIn={isLoggedIn} onLogout={handleLogout} />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<AboutUs />} />\n\n        {/* For dropdown button */}\n        <Route path=\"/aiml\" element={<AiMl />} />\n        <Route path=\"/Ds\" element={<Ds />} />\n        <Route path=\"/forgotpw\" element={<Forgotpw/>}></Route>\n        {isAdmin && <Route path=\"/admin\" element={<AdminPanel />} />}\n        {/* Redirect or show a not found component for unmatched routes */}\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAO,iBAAiB;AACxB,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,UAAU,MAAM,iBAAiB;AAExC,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,EAAE,MAAM,SAAS;AACxB,OAAOC,QAAQ,MAAM,eAAe;AAEpC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMsB,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC,MAAMC,SAAS,GAAGC,OAAO,CAAC,mBAAmB,CAAC;IAC9C,MAAMC,UAAU,GAAGF,SAAS,CAACG,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACP,KAAK,KAAKA,KAAK,CAAC;IAErE,IAAII,UAAU,EAAE;MACZI,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACJ;IACAN,SAAS,CAACG,KAAK,CAACI,IAAI,CAAC;MAAET,KAAK;MAAEC;IAAS,CAAC,CAAC;IACzC;IACAO,KAAK,CAAC,2BAA2B,CAAC;EACpC,CAAC;EAID,MAAME,WAAW,GAAGA,CAACV,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMU,UAAU,GAAG,iDAAiD;IACpE,MAAMC,aAAa,GAAG,sEAAsE;IAC5F;IACA,IAAI,CAACZ,KAAK,IAAIC,QAAQ,EAAE;MACpBO,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACJ;IACA;IACA,IAAI,CAACG,UAAU,CAACE,IAAI,CAACb,KAAK,CAAC,EAAE;MACzBQ,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IACA;IACA,IAAI,CAACI,aAAa,CAACC,IAAI,CAACZ,QAAQ,CAAC,EAAE;MAC/BO,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACJ;IACA;IACA,IAAIR,KAAK,IAAIC,QAAQ,EAAE;MACnB,IAAID,KAAK,KAAK,mBAAmB,IAAIC,QAAQ,KAAK,OAAO,EAAE;QACvDN,aAAa,CAAC,IAAI,CAAC;QACnBE,UAAU,CAAC,IAAI,CAAC;QAChBC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM,IAAIE,KAAK,KAAK,mBAAmB,EAAE;QACtCL,aAAa,CAAC,IAAI,CAAC;QACnBE,UAAU,CAAC,KAAK,CAAC;QACjBC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACH;QACAU,KAAK,CAAC,2BAA2B,CAAC;MACtC;IACJ,CAAC,MAAM;MACHA,KAAK,CAAC,sCAAsC,CAAC;IACjD;EACF,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBnB,aAAa,CAAC,KAAK,CAAC;IACpBE,UAAU,CAAC,KAAK,CAAC;IACjBC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED,IAAI,CAACJ,UAAU,EAAE;IACf,oBAAOL,OAAA,CAACV,KAAK;MAACoC,OAAO,EAAEL;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxC;EAEA,oBACE9B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,gBACE/B,OAAA,CAACZ,MAAM;MAACiB,UAAU,EAAEA,UAAW;MAAC2B,QAAQ,EAAEP;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1D9B,OAAA,CAACJ,MAAM;MAAAmC,QAAA,gBACL/B,OAAA,CAACH,KAAK;QAACoC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAElC,OAAA,CAACX,IAAI;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrC9B,OAAA,CAACH,KAAK;QAACoC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAElC,OAAA,CAACT,OAAO;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG7C9B,OAAA,CAACH,KAAK;QAACoC,IAAI,EAAC,OAAO;QAACC,OAAO,eAAElC,OAAA,CAACP,IAAI;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzC9B,OAAA,CAACH,KAAK;QAACoC,IAAI,EAAC,KAAK;QAACC,OAAO,eAAElC,OAAA,CAACN,EAAE;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrC9B,OAAA,CAACH,KAAK;QAACoC,IAAI,EAAC,WAAW;QAACC,OAAO,eAAElC,OAAA,CAACL,QAAQ;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACrDvB,OAAO,iBAAIP,OAAA,CAACH,KAAK;QAACoC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAElC,OAAA,CAACR,UAAU;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtD,CAAC;EAAA,eACT,CAAC;AAEP;AAAC1B,EAAA,CAnFQD,GAAG;EAAA,QAGOL,WAAW;AAAA;AAAAqC,EAAA,GAHrBhC,GAAG;AAqFZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}